package View;

import Controller.JardinController;
import Model.Actores.Acudiente;
import Model.Actores.Admin;
import Model.Actores.Ninno;
import Model.Actores.Profesor;
import Persistencia.Almacenamiento;

/**
 * JFrame que sirve de ventana de inicio de sesion
 * @author Royk
 */
public class Login extends javax.swing.JFrame {
    
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        llenarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ingresarBoton = new javax.swing.JButton();
        salirBoton = new javax.swing.JButton();
        usuarioCombo = new javax.swing.JComboBox<>();
        idText = new javax.swing.JTextField();
        informacionLabel = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Log In");

        ingresarBoton.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        ingresarBoton.setText("Ingresar");
        ingresarBoton.setToolTipText("Ingresa con tu nombre y contraseña");
        ingresarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBotonActionPerformed(evt);
            }
        });

        salirBoton.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        salirBoton.setText("Salir");
        salirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBotonActionPerformed(evt);
            }
        });

        usuarioCombo.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        usuarioCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuario" }));
        usuarioCombo.setToolTipText("Selecciona tu tipo de usuario");

        idText.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        idText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idText.setText("123456");
        idText.setToolTipText("Tu nombre.");

        informacionLabel.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        informacionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        informacionLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        passwordText.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        passwordText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordText.setText("admin");
        passwordText.setToolTipText("Ingrese su Contraseña");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("El Programador Del Futuro");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Jardin Infantil");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setText("Inicio de Sesión");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usuarioCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(salirBoton))
                            .addComponent(ingresarBoton)))
                    .addComponent(informacionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(48, 48, 48)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(usuarioCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ingresarBoton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(informacionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salirBoton)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Boton para almacenar cambios y cerrar el programa
     * @param evt 
     */
    private void salirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBotonActionPerformed
        Almacenamiento.almacenarRegistros();
        System.exit(0);
    }//GEN-LAST:event_salirBotonActionPerformed

    /**
     * Boton que valida la informacion suministrada, y si coincide con algun perfil almacenado, abre su ventana
     * @param evt 
     */
    private void ingresarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBotonActionPerformed
        String usuario = usuarioCombo.getSelectedItem().toString();
        switch(usuario){
            case "Usuario":
                informacionLabel.setText("Seleccione un tipo de usuario valido");
                break;
            case "Profesor":
                Profesor profesor = getProfesor();
                if(profesor != null){
                    if(profesor.isPassword(passwordText.getPassword())){
                        ProfesorGUI profesorGui = new ProfesorGUI(profesor, this);
                        profesorGui.setTitle("Profesores - " + 
                            profesor.getNombreCompleto());
                        profesorGui.setVisible(true);
                        this.setVisible(false);
                    }else
                        informacionLabel.setText("Contraseña Invalida");
                }else
                    informacionLabel.setText("Identificacion no valida para profesor");
                break;
            case "Administrativo":
                Admin admin = getAdmin();
                if(admin != null){
                    if(admin.isPassword(passwordText.getPassword())){
                        AdminGUI adminGui = new AdminGUI(admin, this);
                        adminGui.setTitle("Administradores - " +
                            admin.getNombreCompleto());
                        adminGui.setVisible(true);
                        this.setVisible(false);
                    }else
                        informacionLabel.setText("Contraseña Invalida");
                }else
                    informacionLabel.setText("Identificacion no valida para Administrador");
                break;
            case "Acudiente":
                Acudiente acudiente = getAcudiente();
                Ninno ninno = getNinno();
                if(ninno != null && acudiente != null){
                    if(acudiente.isPassword(passwordText.getPassword())){
                        AcudienteGUI acudienteGui = new AcudienteGUI(ninno, this);
                        acudienteGui.setTitle("Acudientes - " +
                            acudiente.getNombreCompleto());
                        acudienteGui.setVisible(true);
                        this.setVisible(false);
                    }else
                        informacionLabel.setText("Contraseña Invalida");
                }else
                    informacionLabel.setText("Identificacion no valida para Administrador");
                break;                
        }
    }//GEN-LAST:event_ingresarBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idText;
    private javax.swing.JLabel informacionLabel;
    private javax.swing.JButton ingresarBoton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JButton salirBoton;
    private javax.swing.JComboBox<String> usuarioCombo;
    // End of variables declaration//GEN-END:variables

    /**
     * Getter para obtener el profesor cuya id fue suministrada de la lista de profesores
     * @return 
     */
    Profesor getProfesor() {
        return JardinController.getProfesor(idText.getText());
    }
    
    /**
     * Getter para obtener el admin cuya id fue suminitrada de la lista de admins
     * @return 
     */
    public Admin getAdmin(){
        return JardinController.getAdmin(idText.getText());
    }

    /**
     * Llena el combo con los roles permitidos para el login
     */
    private void llenarCombo() {
        usuarioCombo.addItem("Administrativo");
        usuarioCombo.addItem("Profesor");
        usuarioCombo.addItem("Acudiente");
    }

    /**
     * Getter para obtener el acudiente cuya id fue suministrada, buscando en la lista de ninnos
     * @return 
     */
    private Acudiente getAcudiente() {
        return JardinController.getAcudiente(idText.getText());
    }
    
    /**
     * Getter para obtener el ninno asociado al acudiente cuya id fue suministrada.
     * @return 
     */
    private Ninno getNinno(){
        return JardinController.getNinnoPorAcudiente(idText.getText());
    }
}
